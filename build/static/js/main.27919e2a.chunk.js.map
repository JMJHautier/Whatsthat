{"version":3,"sources":["routes/home/Home.js","routes/ask/Step1.js","routes/ask/Step2.js","context/AuthContext.js","routes/ask/Step3.js","routes/ask/Step4.js","routes/ask/Ask.js","routes/guess/Guess.js","routes/search/SearchBar.js","routes/search/Search.js","routes/about/About.js","routes/user/User.js","components/Header.js","components/Nav.js","routes/guess/GuessByAsk.js","routes/guess/SingleGuess.js","routes/ask/SingleAsk.js","routes/user/SignIn.js","routes/user/SignUp.js","App.js","theme.js","index.js"],"names":["Home","Grid","container","direction","justify","style","maxWidth","minWidth","spacing","item","Button","variant","color","className","size","to","Step1","language","content","setContent","onSubmit","setLanguage","nextFormStep","useForm","mode","defaultValues","register","handleSubmit","watch","formState","errors","isValid","useEffect","Prism","highlightAll","console","log","required","value","message","type","id","name","checked","onChange","defaultChecked","htmlFor","code","evt","target","onKeyDown","selStartPos","currentTarget","selectionStart","key","substring","length","selectionEnd","preventDefault","JSON","stringify","disabled","onClick","Step2","prevFormStep","whatsthat","setWhatsthat","onMouseUp","window","getSelection","toString","trim","hidden","Whatsthat","AuthContext","createContext","AuthState","children","useState","isAuthenticated","setIsAuthenticated","user","setUser","error","setError","serverLink","process","getUser","a","token","localStorage","getItem","options","headers","fetch","response","json","data","res","success","removeItem","verifySession","setTimeout","Provider","logOut","Step3","setOnlineId","useContext","_id","useRef","highlight","text","innerHTML","current","index","indexOf","event","newAsk","body","author","method","class","ref","Step4","askId","formStep","Ask","setFormStep","onlineId","prevStep","Guess","formSubmitted","allAsks","setAllAsks","allAsksLink","getAllAsks","map","singleAsk","singleAskLink","time","SearchBar","setValue","allGuesses","setAllGuesses","getAllGuesses","defaultProps","getOptionLabel","option","Autocomplete","newValue","debug","renderInput","params","TextField","label","margin","Search","askByGuess","setAskByGuess","getAsksByGuesses","bodytrim","webdoc","stack","href","src","alt","link","substr","About","User","username","ask","email","alert","switchState","updateAlert","FormControl","component","FormGroup","guess","FormControlLabel","control","Switch","find","Header","alignItems","fontSize","Nav","selected","notSelected1","notSelected2","routeSelected","routeNotSelected1","routeNotSelected2","xs","Link","fullWidth","GuessByAsk","allGuess","setAllGuess","isIncrease","setIsIncrease","getGuessesByAsk","increaseRating","newRating","rating_positive","rating_negative","getVerified","newVerify","isVerified","comment","Checkbox","SingleGuess","setFormSubmitted","useParams","isSubmitted","newGuess","source","for","maxLength","pattern","SingleAsk","setAsk","getAsk","SignIn","ORIGIN","onError","password","login","setItem","SignUp","newUser","minLength","App","width","exact","path","marginTop","theme","createMuiTheme","palette","primary","main","secondary","background","default","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.27919e2a.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from '@material-ui/core/';\r\nimport './home.css';\r\n\r\nconst Home = () => {\r\n\r\n   return (\r\n   <main>\r\n      <div>\r\n      <Grid container \r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      style={{maxWidth:'100vw', minWidth:'50vw'}}\r\n      spacing={2}\r\n      > \r\n         <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"button-home\" size=\"large\"> \r\n               <Link to=\"/ask\"><strong>Ask</strong></Link>\r\n            </Button>\r\n         </Grid>\r\n\r\n         <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"button-home\" size=\"large\"> \r\n               <Link to=\"/guess\"><strong>Guess </strong></Link>\r\n            </Button>\r\n         </Grid>\r\n\r\n         <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"button-home\" size=\"large\"> \r\n               <Link to=\"/search\"><strong> Search </strong></Link>\r\n             </Button>\r\n          </Grid>\r\n      </Grid>\r\n      </div>\r\n   </main>\r\n   )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport './codeEditor.css';\r\nimport './prism.css'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Step1 = ({language, content, setContent, onSubmit, setLanguage, nextFormStep}) => {\r\n\r\n  const { register, handleSubmit, watch, formState: { errors, isValid} } = useForm({mode:\"all\", defaultValues:{language:'javascript'}});\r\n\r\n  const handleKeyDown = evt => {\r\n    let value = content,\r\n      selStartPos = evt.currentTarget.selectionStart;\r\n\r\n    // handle 4-space indent on\r\n    if (evt.key === \"Tab\") {\r\n      value =\r\n        value.substring(0, selStartPos) +\r\n        \"    \" +\r\n        value.substring(selStartPos, value.length);\r\n      evt.currentTarget.selectionStart = selStartPos + 3;\r\n      evt.currentTarget.selectionEnd = selStartPos + 4;\r\n      evt.preventDefault();\r\n\r\n      setContent(value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n    console.log(language)\r\n  }, [language, content]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* register your input into the hook by invoking the \"register\" function */}\r\n\r\n                  <fieldset {...register(\"language\",{required:{value:true, message:\"Please pick language\"}})}>\r\n                        <legend>Choose language:</legend>\r\n                        <input\r\n                        type=\"radio\"\r\n                        id=\"javascript\"\r\n                        name=\"language\"\r\n                        value=\"javascript\"\r\n                        checked={language === \"javascript\"}\r\n                        onChange={() => setLanguage(\"javascript\")}\r\n                        defaultChecked=\"true\"\r\n                        />\r\n                        <label htmlFor=\"javascript\">JavaScript</label>\r\n                        <input\r\n                        type=\"radio\"\r\n                        id=\"xml\"\r\n                        name=\"language\"\r\n                        value=\"markup\"\r\n                        checked={language === \"markup\"}\r\n                        onChange={() => setLanguage(\"markup\")}\r\n                        />\r\n                        <label htmlFor=\"Html\">HTML</label>\r\n                        <input\r\n                        type=\"radio\"\r\n                        id=\"css\"\r\n                        name=\"language\"\r\n                        value=\"css\"\r\n                        checked={language === \"css\"}\r\n                        onChange={() => setLanguage(\"css\")}\r\n                        />\r\n                        <label htmlFor=\"css\">CSS</label>\r\n                  </fieldset>\r\n            {/* include validation with required or other standard HTML validation rules */}\r\n            {errors.code && <p>{errors.code.message}</p>}\r\n\r\n    <div className=\"code-edit-container\">\r\n      <textarea\r\n      {...register(\"code\", {required:{value:true, message:\"Please insert code\",}})}\r\n        className=\"code-input\"\r\n        value={content}\r\n        onChange={evt => setContent(evt.target.value)}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n      <pre className=\"line-numbers\">\r\n        <code className={`language-${language}`}>{content}</code>\r\n      </pre>\r\n    </div>\r\n    <pre> {JSON.stringify(watch(), null, 2)}</pre>\r\n    <input disabled={!isValid} type=\"submit\" onClick={nextFormStep} value=\"Next\"/>\r\n    </form>\r\n\r\n  );\r\n};\r\n\r\nexport default Step1;","import React, {useEffect} from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport './codeEditor.css';\r\nimport './prism.css'\r\nimport { useForm } from \"react-hook-form\";\r\n// import ReactQuill from 'react-quill'; \r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst Step2 = ({language, content, setContent, onSubmit, prevFormStep, whatsthat, setWhatsthat, nextFormStep}) => {\r\n\r\nconst { register, handleSubmit, watch, formState: { errors, isValid} } = useForm({mode:\"all\"});\r\n//  const breakdown = Quill.getEditor();\r\n//  console.log(breakdown);\r\n//? Using quill to select bits of text. I leave it here for reference, but it is no longer useful\r\n  //  const onChangeSelection = (range, source, editor) => {\r\n  //    if(range) {\r\n  //     const selection = editor.getSelection();\r\n  //     const text = editor.getText();\r\n  //     if(whatsthat) {\r\n  //       setWhatsthat('');\r\n  //     }\r\n  //     setWhatsthat(text.substring(selection.index, selection.length))\r\n  //    } \r\n  //  }\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input type=\"submit\" onClick={prevFormStep} value=\"previous\"/>\r\n      {/*Using quill to select bits of text. I leave it here for reference, but it is no longer useful */}\r\n      {/* <ReactQuill theme={null}\r\n                  defaultValue={content}\r\n                  onChangeSelection={onChangeSelection}\r\n      /> */}\r\n\r\n      <pre className=\"line-numbers\">\r\n        <code\r\n        onMouseUp={()=>setWhatsthat(window.getSelection().toString().trim())}\r\n        className={`language-${language}`}>\r\n\r\n        {content}\r\n        </code>\r\n      </pre>\r\n\r\n      <pre> {JSON.stringify(watch(), null, 2)}</pre>\r\n      <h3> you have selected: <em>{whatsthat}</em></h3>\r\n      <input\r\n        hidden=\"true\"\r\n        disabled=\"true\"\r\n        {...register(\"Whatsthat\", { required: {value: true, message:\"Please pick a word\" }})} value={whatsthat}\r\n        />\r\n        {errors.Whatsthat && <p>{errors.Whatsthat.message}</p>}\r\n\r\n      {whatsthat && \r\n      (<input \r\n        type=\"submit\" \r\n        onClick={nextFormStep} \r\n        value=\"What's that\"/>)}\r\n    </form>\r\n\r\n  );\r\n};\r\n\r\nexport default Step2;","import {createContext, useState, useEffect} from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthState = ({children}) => {\r\n   const [isAuthenticated, setIsAuthenticated] = useState(false); \r\n   const [user, setUser] = useState({});\r\n   const [error, setError] = useState('')\r\n   const serverLink = process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n\r\n   const logOut = () => {\r\n      localStorage.removeItem('token');\r\n      setIsAuthenticated(false);\r\n   }\r\n   const getUser = async() => {\r\n      const token = localStorage.getItem('token');\r\n      console.log(token);\r\n      \r\n         const options = {\r\n            headers: {\r\n               token\r\n            }\r\n         }\r\n      \r\n      const response = await fetch(`${serverLink}/auth/me`, options)\r\n      const data = await response.json();\r\n      setUser(data);\r\n      console.log(data);\r\n   }\r\n   useEffect(()=> {\r\n      const token = localStorage.getItem('token');\r\n      console.log(token);\r\n      const verifySession = async () => {\r\n         const options = {\r\n            headers: {\r\n               token\r\n            }\r\n         };\r\n      \r\n      const res = await fetch(`${serverLink}/auth/verify-session`, options);\r\n      const {success} = await res.json();\r\n      if(success) {\r\n         setIsAuthenticated(true); \r\n\r\n         getUser();\r\n         \r\n      } else {\r\n         localStorage.removeItem('token');\r\n         setIsAuthenticated('false'); \r\n         setUser('');\r\n         console.log('token removed')\r\n      }\r\n   }\r\n      if(token) {\r\n         verifySession();\r\n         console.log('hi')\r\n      }\r\n            \r\n   }, [])\r\n\r\n   useEffect (()=> {\r\n      setTimeout(()=> setError(''), 3000);\r\n   }, [error])\r\n\r\n  \r\n\r\n\r\n   return (<AuthContext.Provider value={{isAuthenticated, setIsAuthenticated, user, setUser, getUser, error, setError,logOut}}>\r\n      {children}\r\n   </AuthContext.Provider>)\r\n}\r\n\r\nexport default AuthState;","import React, {useEffect, useRef} from \"react\";\r\nimport Prism, { highlight } from \"prismjs\";\r\nimport './codeEditor.css';\r\nimport './prism.css'\r\nimport { useForm } from \"react-hook-form\";\r\nimport ReactQuill, {Quill} from 'react-quill'; \r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {useContext} from 'react'; \r\nimport {AuthContext} from '../../context/AuthContext.js'; \r\n\r\n\r\n// import HighlightText from '../../components/highlight.js'\r\n\r\nconst Step3 = ({language, content, setContent, prevFormStep, whatsthat, setWhatsthat, nextFormStep, setOnlineId}) => {\r\n\r\n   const { register, handleSubmit, watch, formState: { errors, isValid} } = useForm({mode:\"all\"});\r\n   const {user, getUser} = useContext(AuthContext); \r\n  const {_id}= user \r\n  const serverLink = process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n\r\n   const code = useRef();\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n    // <HighlightText text={whatsthat}/>;\r\n    highlight(whatsthat)\r\n  }, []);\r\n\r\n  const highlight = (text) => {\r\n    let innerHTML = code.current.innerHTML;\r\n    console.log(code)\r\n    console.log(innerHTML)\r\n    const index = innerHTML.indexOf(text);\r\n    console.log(index);\r\n    if (index >= 0) { \r\n     innerHTML = innerHTML.substring(0,index) + \"<span class='highlight'>\" + innerHTML.substring(index,index+text.length) + \"</span>\" + innerHTML.substring(index + text.length);\r\n     code.current.innerHTML = innerHTML;\r\n    \r\n    }\r\n \r\n  }\r\n  \r\nconst onSubmit = async (event) => {\r\n  const newAsk = {\r\n    body: content,\r\n    whatsthat: whatsthat,\r\n    language: language,\r\n    author: _id\r\n  }\r\n  console.log(newAsk);\r\n  event.preventDefault()\r\n  const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify(newAsk),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n\r\n  try {\r\n    const response = await fetch(`${serverLink}/ask/`, options)\r\n    const data = await response.json()\r\n    console.log(data) \r\n    setOnlineId(data.newAsk[\"_id\"])\r\n    getUser();\r\n    nextFormStep()\r\n  } catch (error) {console.log(error)}\r\n\r\n}\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input type=\"submit\" onClick={prevFormStep} value=\"previous\"/>\r\n      <h3> What is  </h3>\r\n      <h3><span class=\"highlight\">{whatsthat}</span></h3>\r\n      <h3> in my code: </h3>\r\n      <pre className=\"line-numbers\" >\r\n        <code ref={code}\r\n          className={`language-${language}`}>\r\n            {content}\r\n         </code>\r\n      </pre>\r\n\r\n      {/* <pre> {JSON.stringify(watch(), null, 2)}</pre> */}\r\n    <input type=\"submit\" onClick={onSubmit} value=\"submit\"/>\r\n\r\n    </form>)\r\n\r\n      }\r\n\r\n      export default Step3;","import {Link} from 'react-router-dom';\r\nimport {Button} from '@material-ui/core';\r\n\r\nconst Step4 = ({askId, nextFormStep, formStep})=> {\r\n\r\n   return (\r\n   <div>\r\n      <p> Your submission is available at: <Link to={askId}>https://whatsthat/{askId}</Link></p>\r\n         Wanna be notified when you get an answer? \r\n      <Button to=\"/\" onClick={nextFormStep}> Notify me per email</Button>\r\n      <p hidden={formStep===4?false:true}> you will be notified by email! Go back to <Link to=\"/\"> home page</Link></p>\r\n   </div>\r\n   ) \r\n}\r\n\r\nexport default Step4;\r\n","import {Button} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\nimport {useState} from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Step1 from './Step1.js';\r\nimport Step2 from './Step2.js';\r\nimport Step3 from './Step3.js';\r\nimport Step4 from './Step4.js';\r\n\r\nconst Ask = () => {\r\n      const [formStep, setFormStep] = useState(0);\r\n      const [language, setLanguage] = useState(\"javascript\");\r\n      const [content, setContent] = useState();\r\n      const [whatsthat, setWhatsthat] = useState(\"\"); \r\n      const [onlineId, setOnlineId] = useState('');\r\n       const askId = `ask/${onlineId}`;\r\n\r\n      const { register, handleSubmit, watch, formState: { errors, isValid} } = useForm({mode:\"all\"});\r\n      const nextFormStep = () => {\r\n            setFormStep(prevStep => prevStep+1)\r\n      }\r\n      const prevFormStep = () => {\r\n            setFormStep(prevStep => prevStep -1)\r\n      }\r\n      const onSubmit = data => {\r\n            setFormStep(prevStep => prevStep+1)\r\n            console.log(data);\r\n      }\r\n   return (\r\n <div> \r\n      {formStep === 0 && (\r\n      <section> \r\n            <h3>  1- Copy your code </h3>\r\n            \r\n                  <Step1 language={language} content={content} setContent={setContent} onSubmit={onSubmit} setLanguage={setLanguage} nextFormStep={nextFormStep}/>\r\n      </section>)\r\n      }\r\n      {formStep===1 && (\r\n      <section> \r\n            <h3> 2- Select the word that you don't know</h3>\r\n\r\n                  <Step2 content={content} language={language} onSubmit={onSubmit} prevFormStep={prevFormStep} nextFormStep={nextFormStep} whatsthat={whatsthat} setWhatsthat={setWhatsthat}/>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                  \r\n            </form>\r\n      </section>\r\n\r\n      )}\r\n      {formStep===2 &&(\r\n      <section> \r\n            <h3> 3- Review your submission </h3>\r\n                  <Step3 content={content} language={language} onSubmit={onSubmit} prevFormStep={prevFormStep} nextFormStep={nextFormStep} whatsthat={whatsthat} setOnlineId={setOnlineId}/>\r\n\r\n      </section>)\r\n      }     \r\n      {formStep >=3 &&(\r\n            <section>\r\n            <h3> Congratulations! </h3>\r\n\r\n                  <Step4 askId={askId} nextFormStep={nextFormStep} formStep={formStep}/>\r\n\r\n            </section>\r\n      )}\r\n{/* <pre> {JSON.stringify(watch(), null, 2)}</pre> */}\r\n</div>\r\n   ) \r\n}\r\n\r\nexport default Ask;\r\n","import {Link} from 'react-router-dom';\r\nimport {useEffect, useState} from 'react'; \r\n\r\nconst Guess = ({formSubmitted}) => {\r\n   const randomLink=\"\"; \r\n   const [allAsks, setAllAsks] = useState(['']);\r\n   const serverLink = process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n   const allAsksLink = `${serverLink}/ask/`;\r\n\r\n   useEffect (()=> {\r\n      const getAllAsks = async () => {\r\n      const response = await fetch(allAsksLink);\r\n      const data = await response.json();\r\n      setAllAsks(data); \r\n      console.log(allAsks)\r\n      }\r\n      getAllAsks()\r\n   }, [formSubmitted]) \r\n\r\n   return (\r\n      <div>\r\n         <h3>Guess a term</h3>\r\n         <p> You may either test yourself by guessing a term with a confirmed answer, or help the community by guessing a term that did not have a consensual answer yet.\r\n            <h4>Test yourself </h4>\r\n         <Link to={randomLink}>Get a random \"What's that\" </Link> which has already been answered by the community. Can you get it right? \r\n         <h4>Help the community</h4>\r\n         <p> Here is the list of all the 'What's that' without confirmed answer. Please help the community by providing an answer! </p>\r\n         <div class=\"line\"> </div>\r\n         <table> \r\n            <tr> <th>Date of submission</th>\r\n            <th>unknown word</th>\r\n            </tr>\r\n            {allAsks.map(singleAsk => \r\n               { \r\n                  const id = singleAsk[\"_id\"];\r\n                  const singleAskLink=`/guess/${id}`\r\n                  return (\r\n               <tr> \r\n                  <td>{singleAsk.time}</td>\r\n                  <td><Link to={singleAskLink}>{singleAsk.whatsthat}</Link></td>\r\n               </tr>\r\n               )\r\n               })\r\n            }\r\n         </table>\r\n         </p>\r\n      </div> \r\n)\r\n}\r\n\r\nexport default Guess;","import TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nconst SearchBar = ({value, setValue}) => {\r\n\r\nconst [allGuesses, setAllGuesses] = useState(); \r\n   const serverLink = process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n\r\n   useEffect(()=> {\r\n      const getAllGuesses = async () => {\r\n         try{\r\n            const response = await fetch(`${serverLink}/guess`)\r\n            const data = await response.json(); \r\n            setAllGuesses(data); \r\n            console.log(allGuesses);\r\n         }catch(error) {console.log(error)}\r\n      }\r\n      getAllGuesses();\r\n   }, [])\r\n\r\n   const defaultProps = {\r\n      options: allGuesses,\r\n      getOptionLabel: (option) => option.body,\r\n    };\r\n\r\n   return (\r\n      <div>\r\n      <h3>  This is the Search page </h3>\r\n      {allGuesses?\r\n      (<Autocomplete\r\n        {...defaultProps}\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n           setValue(newValue)\r\n        }}\r\n        id=\"answers\"\r\n        debug\r\n        renderInput={(params) => <TextField {...params} label=\"search a term\" margin=\"normal\" />}\r\n      />):<p></p>}\r\n\r\n\r\n</div>\r\n   )\r\n\r\n      }\r\n\r\n      export default SearchBar","import {Link} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react'; \r\nimport SearchBar from './SearchBar.js'\r\nimport {Button} from '@material-ui/core'\r\n// import mdn from '%PUBLIC_URL%/mdn.jpg';\r\nconst Search = () => {\r\n   const serverLink = process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n   const options = ['Option 1', 'Option 2'];\r\n   const [value, setValue] = useState(options[0]);\r\n   const [askByGuess, setAskByGuess] = useState();\r\n   console.log(serverLink)\r\n   useEffect (\r\n      ()=> {\r\n         const getAsksByGuesses = async() => {\r\n\r\n            const {body} = value\r\n            const bodytrim = body.trim()\r\n            console.log(body)\r\n            const response = await fetch(`${serverLink}/ask/guess/${bodytrim}`)\r\n            const data = await response.json();\r\n            setAskByGuess(data); \r\n            console.log(askByGuess);\r\n         }\r\n         if (value=== null) {console.log(\"value is null\")}\r\n         else if(value.body) {getAsksByGuesses()}\r\n         else{console.log(\"no search done\")}\r\n      }\r\n   , [value])\r\n      const webdoc=`https://developer.mozilla.org/en-US/docs/Glossary/${value.body}`\r\n      const stack=`https://stackoverflow.com/search?q=${value.body}`\r\n   return (\r\n      <div>\r\n         <SearchBar value={value} setValue={setValue}/>\r\n\r\n         {value&&askByGuess?\r\n         (<div>\r\n         <a href={webdoc} target=\"_blank\"> <img src=\"mdn.jpg\" alt=\"mdn\" href={webdoc}/></a>\r\n         <a href={stack} target=\"_blank\"> <img src=\"stack.bmp\" alt=\"stack\" href={stack}/></a>\r\n         <h3>Examples of {value.body}</h3> \r\n         \r\n         <table>\r\n            <tr>\r\n               <th>Date</th>\r\n               <th>Language</th>\r\n               <th> Extract</th>\r\n            </tr>\r\n            \r\n            \r\n               {askByGuess.map(singleAsk => { \r\n                  const link= `/ask/${singleAsk[\"_id\"]}`;\r\n                  return (<tr>\r\n                     <td>{singleAsk.time}</td>\r\n                     <td> {singleAsk.language}</td>\r\n                     <td> <Link to={link}>{singleAsk.body.substr(0,50)}...</Link></td>\r\n                  </tr>)\r\n               })}\r\n            </table></div>)\r\n            :<p></p>}\r\n\r\n           \r\n         \r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Search;","const About = () => {\r\n   return (\r\n   <div>\r\n      <h3>  This is the ask page </h3>\r\n      <p> \r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pulvinar semper turpis eget pretium. Nunc odio neque, auctor a semper at, blandit in justo. Proin dapibus accumsan enim, ac malesuada dolor aliquet nec. Aenean diam metus, vestibulum in eros a, fringilla eleifend risus. Pellentesque finibus enim libero, sit amet accumsan ipsum venenatis id. Ut quis sem condimentum, faucibus lectus in, consequat odio. Sed luctus elit sit amet ligula accumsan aliquet. Donec mauris odio, euismod et purus at, blandit eleifend orci. Fusce congue quis mi tempus sagittis. Phasellus condimentum, purus in pretium convallis, leo leo consectetur lacus, et egestas urna sem vitae odio. Ut massa felis, aliquam vitae urna ut, volutpat eleifend lectus. Proin dignissim dictum libero vel interdum. Morbi vel mauris ac nulla efficitur tincidunt.\r\n\r\n      Cras et velit eget odio posuere convallis ac mattis diam. Sed tincidunt mauris ligula, nec volutpat orci bibendum ac. In at mollis turpis. Donec finibus nec nunc ut luctus. Etiam porta, mauris non accumsan cursus, nulla erat facilisis eros, vitae luctus augue mi eu lorem. Suspendisse pulvinar lobortis libero rutrum maximus. Maecenas sit amet molestie risus. Nullam semper, est a ullamcorper semper, dui erat sagittis purus, sit amet dapibus est nulla in turpis. Proin eu augue felis. Quisque ultrices venenatis odio eget convallis. Fusce nec enim a purus porttitor ornare scelerisque ac tellus.\r\n\r\n      Sed cursus blandit tortor tempus tempor. Morbi scelerisque dolor sed ante molestie mollis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Morbi malesuada ex in nisi sagittis, non euismod nunc laoreet. Nullam at fringilla felis. Aliquam fringilla tempus sem, ut lobortis purus iaculis vel. Pellentesque finibus eget mi sit amet eleifend. Proin purus quam, dignissim ut enim a, viverra tincidunt metus. Quisque ac est vel ante tristique convallis quis non purus. Sed elementum id leo pharetra ultricies. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin tincidunt rhoncus quam. Curabitur finibus ex at aliquet malesuada.\r\n\r\n      Duis augue libero, consectetur in justo viverra, lacinia hendrerit nunc. Curabitur convallis magna non mi auctor, et molestie neque porttitor. Sed ut volutpat ipsum. Proin vestibulum, sapien malesuada ultrices porta, leo tellus volutpat quam, in dignissim urna massa id est. In non nulla eget nulla interdum interdum in vel augue. Fusce sit amet arcu semper, tincidunt eros sagittis, sodales mi. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent fermentum tristique turpis, id finibus enim varius vitae. Sed interdum, nibh sit amet consectetur vehicula, quam magna tempus lectus, quis commodo est risus non nulla. Etiam eu risus imperdiet, bibendum nunc a, posuere tellus. Aenean sit amet lectus finibus, venenatis nisl a, fermentum ligula. Integer finibus nulla at nunc aliquam ullamcorper quis in urna. Nam maximus, arcu ut porta malesuada, turpis odio blandit urna, at dictum nunc leo ac odio. Maecenas eros libero, scelerisque id mi eget, sodales varius erat. Integer fringilla eget eros vitae posuere. Ut sagittis, est ac sollicitudin gravida, purus purus maximus neque, at mollis ante ex quis leo.\r\n      </p>\r\n</div>\r\n)\r\n}\r\n\r\nexport default About;","import {useState, useContext,useEffect} from 'react';\r\nimport {AuthContext} from '../../context/AuthContext'\r\nimport {Link} from 'react-router-dom';\r\nimport {Pagination, Checkbox, FormGroup, FormControlLabel, Switch, FormControl} from '@material-ui/core';\r\nimport AvSkipNext from 'material-ui/svg-icons/av/skip-next';\r\n\r\nconst User = () => {\r\nconst {user, setUser, getUser} = useContext(AuthContext);\r\nconst {username, email, ask, alert} = user;\r\n// const [statusCheckbox, setCheckbox] = useState([])\r\nconst [switchState, setSwitchState] = useState([]);\r\nconsole.log(switchState)\r\nconst serverLink = process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n\r\n\r\n// useEffect(() => {\r\n// if(ask) {\r\n// setSwitchState(ask.map(singleAsk => {\r\n//     if(user.alert.indexOf(singleAsk[\"_id\"]) != -1) \r\n//     {\r\n//       switchState.push(`{j${singleAsk[\"_id\"]}:true}`)\r\n//           }\r\n//     else {\r\n//       switchState.push(`{j${singleAsk[\"_id\"]}:false}`)\r\n//     }\r\n//   }))\r\n// console.log(switchState)\r\n// }\r\n// }\r\n// , [])\r\n// console.log(defaultStatus)\r\n\r\n// setSwitchState(defaultStatus);\r\n\r\n// console.log(switchState);\r\n\r\n// const alertStatus = alert.map(SingleAsk=> {\r\n//   {singleAsk[\"_id\"]: true}\r\n// })\r\n\r\n\r\n\r\n// setSwitchState(prevState=> {...prevState, alertStatus})\r\n\r\n// console.log(SwitchState); \r\n\r\nconst updateAlert = async (event, id) => {\r\n  const options = {\r\n    method: 'PUT',\r\n    body: JSON.stringify({alert: id}),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  if(event.target.checked){\r\n    try {\r\n      const response = await fetch(`${serverLink}/user/addalert/${user[\"_id\"]}`, options)\r\n      const data = await response.json()\r\n      console.log(data) \r\n      getUser();\r\n    } catch (error) \r\n    {console.log(error)}\r\n  } else{\r\n    const response = await fetch(`${serverLink}/user/removealert/${user[\"_id\"]}`, options)\r\n    const data = await response.json()\r\n    console.log(data) \r\n    getUser();\r\n  }\r\n\r\n}\r\n   return (<div> <h3>Welcome, {username} </h3>\r\n   <h4> Your list of questions</h4>\r\n   <table>\r\n     <tr> \r\n      <th>\"What's that\"</th>\r\n      <th> Answers </th>\r\n      <th> time of submission</th>\r\n      <th> Notify me </th>\r\n    </tr> \r\n    \r\n\r\n    {ask && ask.map(singleAsk => {\r\n        \r\n      // const checkCheck = statusCheckbox[statusCheckbox.indexOf(singleAsk[\"_id\"])].value\r\n\r\n      return (\r\n      <FormControl component=\"fieldset\">  \r\n        <FormGroup>   \r\n            <tr> \r\n              <td>\r\n                {singleAsk.whatsthat}\r\n              </td>\r\n              <td>\r\n                {singleAsk.guess.length}\r\n              </td>\r\n              <td>+\r\n              {singleAsk.time}\r\n              </td>\r\n              <td>\r\n\r\n            <FormControlLabel\r\n              control={<Switch\r\n                checked={alert.find(a =>a._id.trim() === singleAsk[\"_id\"]) ? true :false }\r\n                onChange={(event) => updateAlert(event, singleAsk[\"_id\"])}  />}\r\n              \r\n            />\r\n          </td>\r\n            </tr>\r\n          </FormGroup>\r\n      </FormControl>\r\n      )\r\n    })}\r\n\r\n   </table>\r\n</div>)\r\n   \r\n}\r\n\r\nexport default User;","import HelpIcon from '@material-ui/icons/Help';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport './header.css'\r\nimport {Fragment, useContext} from 'react'; \r\nimport {AuthContext} from '../context/AuthContext.js'\r\nconst Header = () => {\r\n   const {isAuthenticated, logOut, user} = useContext(AuthContext);\r\n   const {username} = user;\r\n   return (<header> \r\n      <Grid container\r\n      direction=\"row\"\r\n      justify=\"space-around\"\r\n      alignItems=\"flex-start\"> \r\n\r\n         <Link to=\"/about\"> <HelpIcon fontSize=\"large\"/></Link>\r\n         {isAuthenticated?(<Link to=\"/user\"> <span>My profile({username})</span> <div onClick={logOut}>Logout</div> </Link>)\r\n         :(<div> <Link to=\"/user\"> Log-in </Link> / <Link to=\"signup\">Register</Link></div>)}\r\n\r\n      </Grid>\r\n   <Link to=\"/\"> <h2>What's that?</h2></Link>\r\n   <h3> Know your terms, understand your code, find solutions</h3>\r\n   </header>)\r\n\r\n}\r\n\r\nexport default Header","import {Grid, Box, Button} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './nav.css'\r\n\r\nconst Nav = ({selected, notSelected1, notSelected2}) => \r\n{\r\nconst routeSelected = `/${selected}`\r\nconst routeNotSelected1 = `/${notSelected1}`\r\nconst routeNotSelected2 = `/${notSelected2}`\r\n\r\n return (\r\n <div class=\"grid\">\r\n   <Grid container\r\n   direction=\"row\"\r\n   justify=\"center\"\r\n   alignItems=\"center\"\r\n   spacing={2}\r\n   >\r\n\r\n            <Grid item xs={6} className=\"notSelected\">\r\n                  <Button component={Link} to={routeNotSelected1} variant=\"contained\"  color=\"primary\" style={{fontSize:\"1.5em\", color:'#D7CEB2'}} fullWidth>\r\n                     {notSelected1}\r\n                  </Button> \r\n            </Grid>\r\n\r\n            <Grid item xs={6} color=\"primary\" className=\"notSelected\">\r\n               <Button component={Link} to={routeNotSelected2} variant=\"contained\"  color=\"primary\" style={{fontSize:\"1.5em\",color:'#D7CEB2'}} fullWidth>\r\n                     {notSelected2}\r\n                  </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className=\"selected\" color=\"primary\">\r\n               <Button component={Link} to={routeSelected} variant=\"contained\" color=\"primary\" style={{fontSize:\"2em\"}} fullWidth>\r\n                     {selected} \r\n                  </Button>\r\n            </Grid>\r\n\r\n       </Grid>\r\n       \r\n       </div>\r\n )\r\n}\r\n\r\nexport default Nav\r\n","import {useState, useEffect} from 'react';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst GuessByAsk = ({id, formSubmitted}) => {\r\n\r\nconst [allGuess, setAllGuess] = useState();\r\nconst [isIncrease, setIsIncrease] = useState(false);\r\nconst serverLink= process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n\r\n\r\nuseEffect(() => {\r\n   const getGuessesByAsk = async () => {\r\n      try {\r\n         console.log(id)\r\n      const link=`${serverLink}/guess/ask/${id}`\r\n      const response = await fetch(link)\r\n      const data = await response.json()\r\n      setAllGuess(data);\r\n      console.log(allGuess)\r\n   } catch(error) {console.log(error)}\r\n   }\r\n   getGuessesByAsk();\r\n}, [id, formSubmitted, isIncrease])\r\n\r\nconst increaseRating = async (event)=> {\r\n   let newRating; \r\n   if(event.target.className === \"rating_positive\"){\r\n   newRating = {\r\n      rating_positive: true\r\n   }\r\n   }\r\n   else\r\n   {\r\n      newRating = {\r\n         rating_negative: true\r\n      }\r\n   }\r\n    event.preventDefault()\r\n    const options = {\r\n          method: 'PUT',\r\n          body: JSON.stringify(newRating),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n   console.log(event);\r\n    try {\r\n      const response = await fetch(`${serverLink}/guess/${event.target.id}`, options)\r\n      const data = await response.json()\r\n      console.log(data) \r\n      setIsIncrease(!isIncrease)\r\n    } catch (error) {console.log(error)}\r\n  \r\n}\r\n\r\nconst getVerified = async (event) => {\r\n   const newVerify = {\r\n      isVerified: event.target.checked\r\n   }\r\n   console.log(event.target.checked)\r\n   console.log(event)\r\n   console.log(newVerify)\r\n\r\n   const options = {\r\n      method: 'PUT', \r\n      body: JSON.stringify(newVerify), \r\n      headers: {\r\n         'Content-Type': 'application/json'\r\n      }\r\n   }\r\n   try {\r\n      const response = await fetch(`${serverLink}/guess/${event.target.id}`, options)\r\n      \r\n   }catch(error) {console.log(error)}\r\n}\r\n\r\nreturn (\r\n   <div>\r\n      <h3> Previous answers </h3>\r\n      {allGuess?\r\n         (<table> <tr> <th>Answer</th> <th>comment</th> <th>rating</th></tr>\r\n         {allGuess.map(singleAsk=>{\r\n            return (<tr className={singleAsk.isVerified?\"verified\":\"notverified\"}> \r\n                     <td>{singleAsk.body}</td> \r\n                     <td>{singleAsk.comment}</td>\r\n                     <td><button onClick={increaseRating} id={singleAsk[\"_id\"]} className=\"rating_positive\"> positive:</button>\r\n                      {singleAsk[\"rating_positive\"]} \r\n                      <button onClick={increaseRating} id={singleAsk[\"_id\"]} className=\"rating_negative\" > negative:</button>\r\n                       {singleAsk[\"rating_negative\"]}</td> \r\n                     <td> <Checkbox onClick={getVerified} checked={singleAsk.isVerified} id={singleAsk[\"_id\"]} /> \r\n                      </td>\r\n                  </tr>)\r\n         })}\r\n         </table>):<p>Loading</p>\r\n      }\r\n   </div>\r\n   )\r\n   }\r\n\r\n   export default GuessByAsk\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nconst SingleGuess = ({setFormSubmitted, formSubmitted}) => {\r\n\r\n   const {id} = useParams(); \r\n   console.log(id)\r\n   const { register, handleSubmit, watch, formState: { errors, isValid, isSubmitted} } = useForm({mode:\"all\"});\r\n   const serverLink = process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n\r\n   const onSubmit = async (data, event) => \r\n   {\r\n      console.log(data, event)\r\n      const newGuess = {\r\n         ask: id,\r\n         body: data.body,\r\n         source: data.source,\r\n         comment: data.comment,\r\n         }\r\n      console.log(newGuess);\r\n      event.preventDefault()\r\n      const options = \r\n      {\r\n             method: 'POST',\r\n             body: JSON.stringify(newGuess),\r\n             headers: {\r\n               'Content-Type': 'application/json'\r\n             }\r\n      }\r\n     \r\n       try {\r\n         const response = await fetch(`${serverLink}`, options)\r\n         const data = await response.json()\r\n         console.log(data) \r\n         setFormSubmitted(!formSubmitted)\r\n       } catch (error) {console.log(error)}\r\n      \r\n      }\r\n   \r\n\r\n   const onError = (errors, event)=> {\r\n      console.log(errors, event); \r\n   }\r\n\r\n// useEffect(() => {\r\n//    const getAllAsks = async () => {\r\n//       try {\r\n//       const link=`${serverLink}/guess/ask/${id}`\r\n//       const response = await fetch(link)\r\n//       const data = await response.json()\r\n//       setAllAsks(data);\r\n//       console.log(allAsks)\r\n//    } catch(error) {console.log(error)}\r\n//    }\r\n//    getAllAsks();\r\n// }, [id])\r\n\r\n   return (\r\n<div> \r\n   {!isSubmitted?(\r\n      <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n         <h3> Submit your answer </h3>\r\n         <label for=\"body\">Your answer (50 characters max)</label>\r\n         <input\r\n            id=\"body\"\r\n            type=\"text\"\r\n         {...register(\"body\", { required: {value: true, message:\"Please provide an answer\" }, maxLength:{value: 50, message:'Your answer is too long! Please keep it under 50 characters'}})} \r\n         />\r\n         {errors.body && <p>{errors.body.message}</p>}\r\n         <label for=\"source\">(optional) Your source</label>\r\n         <input\r\n            id=\"source\"\r\n            type=\"text\"\r\n            {...register(\"source\", { pattern:{value: /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\r\n            message:\"Please submit an hyperlink\" }})}\r\n         />\r\n         {errors.source && <p>{errors.source.message}</p>}\r\n\r\n         <label for=\"comment\">(optional) comment</label>\r\n         <input\r\n            id=\"comment\"\r\n            type=\"text\"\r\n            {...register(\"comment\")}\r\n         />\r\n         {errors.comment && <p>{errors.comment.message}</p>}\r\n\r\n         <button type=\"submit\">Submit</button>\r\n      \r\n      </form>\r\n   ):<h3>Thanks for your contribution!</h3>} \r\n   \r\n</div>\r\n   )\r\n}\r\n\r\nexport default SingleGuess","import React, {useEffect, useState, useRef} from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport './codeEditor.css';\r\nimport './prism.css'\r\nimport {useParams} from 'react-router-dom';\r\nimport Guesses from '../guess/GuessByAsk.js';\r\nimport GuessForm from '../guess/SingleGuess.js';\r\nimport {Button} from '@material-ui/core';\r\n\r\nconst SingleAsk = () => {\r\n   const [ask, setAsk] = useState([])\r\n   const [formSubmitted, setFormSubmitted] = useState(false); \r\n   const serverLink = process.env.REACT_APP_ORIGIN || \"http://localhost:3001\";\r\n   const {id} = useParams();\r\n\r\n   const code = useRef();\r\n\r\n   const highlight = (text) => {\r\n      \r\n      let innerHTML = code.current.innerHTML;\r\n     \r\n\r\n            console.log(innerHTML)\r\n            console.log(ask.whatsthat.length)\r\n            console.log(text.length)\r\n         const index = innerHTML.indexOf(text.trim());\r\n         console.log(index);\r\n         if (index >= 0) { \r\n            innerHTML = innerHTML.substring(0,index) + \"<span class='highlight'>\" + innerHTML.substring(index,index+text.length) + \"</span>\" + innerHTML.substring(index + text.length);\r\n            code.current.innerHTML = innerHTML;\r\n            }\r\n      \r\n      }\r\n   \r\n   \r\n   useEffect(() => {\r\n      const getAsk = async () => {\r\n         const response = await fetch(`${serverLink}/ask/${id}`)\r\n         const data = await response.json();\r\n         setAsk(data);\r\n         console.log(ask);\r\n         ask.whatsthat?highlight(ask.whatsthat):console.log(\"loading\")\r\n\r\n      }\r\n      getAsk();\r\n\r\n      Prism.highlightAll();\r\n\r\n   }, [ask.whatsthat])\r\n\r\n\r\nreturn (\r\n<div> \r\n         {ask?\r\n         (<div>\r\n            <p> What's that {ask[\"_id\"]} / Submitted on {ask.time}</p>\r\n            <h3> What is  </h3>\r\n            <h3><span class=\"highlight\">{ask.whatsthat}</span></h3>\r\n            <h3> in my code: </h3>\r\n            <pre className=\"line-numbers\" >\r\n               <code\r\n               ref={code}\r\n               className={`language-${ask.language}`}>\r\n                  {ask.body}\r\n               </code>\r\n            </pre>\r\n         <GuessForm setFormSubmitted={setFormSubmitted}/>\r\n         <Guesses id={id} formSubmitted={formSubmitted} setFormSubmitted={setFormSubmitted}/>\r\n         </div>)\r\n         :(<p>Loading</p>)\r\n         }\r\n   </div>\r\n)\r\n\r\n}\r\n\r\nexport default SingleAsk","import { useForm } from \"react-hook-form\";\r\nimport {useContext} from 'react';\r\nimport {AuthContext} from '../../context/AuthContext'; \r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst SignIn = () => {\r\n\r\n   const {isAuthenticated, setIsAuthenticated, error, setError, getUser}= useContext(AuthContext); \r\n   const serverLink = process.env.ORIGIN || \"http://localhost:3001\";\r\n   const { register, handleSubmit, watch, formState: { errors, isValid, isSubmitted, onError} } = useForm({mode:\"all\"});\r\n   \r\n   const onSubmit = async (data, event) => \r\n      {\r\n         const {password, email} = data;\r\n         const login = {\r\n            password,\r\n            email\r\n            }\r\n   \r\n         event.preventDefault()\r\n         const options = \r\n         {\r\n                method: 'POST',\r\n                body: JSON.stringify(login),\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n         }\r\n        \r\n          try {\r\n            const response = await fetch(`${serverLink}/auth/signin`, options)\r\n            const {token, error} = await response.json()\r\n            if(error) {\r\n               setError(error)\r\n               return {error};\r\n            }\r\n            localStorage.setItem('token', token);\r\n            setIsAuthenticated(true);\r\n            getUser();\r\n            console.log(token); \r\n          } catch (error) {console.log(error)}\r\n         \r\n         }\r\n   if(isAuthenticated) return <Redirect to=\"/\" />;\r\n   \r\n    return (<div>\r\n       {error && <div> error {error}</div>}\r\n   <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n            <h3> Sign in </h3>\r\n\r\n            <label htmlFor=\"email\">Your email</label>\r\n            <input\r\n               id=\"email\"\r\n               type=\"text\"\r\n               {...register(\"email\")}\r\n            />\r\n            {errors.email && <p>{errors.email.message}</p>}\r\n   \r\n            <label htmlFor=\"password\">Password(at least 8 characters, including one special character)</label>\r\n            <input\r\n               id=\"password\"\r\n               type=\"password\"\r\n               {...register(\"password\")}\r\n            />\r\n            {/* <input\r\n               id=\"passwordCheck\"\r\n               type=\"password\"\r\n               {...register(\"passwordCheck\",{\r\n               required: {value:true, message:\"Please rewrite your password\"},\r\n               maxLength:{value:20, message:\"Your Password is too long! Please pick a passwordCheck between 8 and 20 characters\"}, \r\n               minLength:{value:8, message:\"Your Password is too short! Please submit at least 8 characters\"}, \r\n               pattern:{value: /(?=.*[!?@#$%^&-+=()])/, message:\"Please include at least one special character(!?@#$%&*()-+=^)\"}\r\n               })}\r\n   \r\n            />\r\n            {errors.passwordCheck && <p>{errors.passwordCheck.message}</p>} */}\r\n   \r\n            <button type=\"submit\">Submit</button>\r\n         \r\n         </form>\r\n         <pre> {JSON.stringify(watch(), null, 2)}</pre>\r\n         </div>)\r\n   }\r\n   \r\n   export default SignIn\r\n   ","import { useForm } from \"react-hook-form\";\r\nimport {useContext} from 'react';\r\nimport {AuthContext} from '../../context/AuthContext'; \r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\nconst {isAuthenticated, setIsAuthenticated, error, setError}= useContext(AuthContext); \r\nconst serverLink = process.env.ORIGIN || \"http://localhost:3001\";\r\nconst { register, handleSubmit, watch, formState: { errors, isValid, isSubmitted, onError} } = useForm({mode:\"all\"});\r\n\r\nconst onSubmit = async (data, event) => \r\n   {\r\n      console.log(data, event)\r\n      const {username, password, email} = data;\r\n      const newUser = {\r\n         username,\r\n         password,\r\n         email\r\n         }\r\n\r\n      event.preventDefault()\r\n      const options = \r\n      {\r\n             method: 'POST',\r\n             body: JSON.stringify(newUser),\r\n             headers: {\r\n               'Content-Type': 'application/json'\r\n             }\r\n      }\r\n     \r\n       try {\r\n         const response = await fetch(`${serverLink}/auth/signup`, options)\r\n         const {token, error} = await response.json()\r\n         if(error) {\r\n            setError(error)\r\n            return {error};\r\n         }\r\n         localStorage.setItem('token', token);\r\n         setIsAuthenticated(true);\r\n         console.log(token); \r\n       } catch (error) {console.log(error)}\r\n      \r\n      }\r\nif(isAuthenticated) return <Redirect to=\"/\" />;\r\n\r\n return (<div>\r\n    {error && <div> error {error}</div>}\r\n<form onSubmit={handleSubmit(onSubmit, onError)}>\r\n         <h3> Sign up </h3>\r\n         <label htmlFor=\"username\">Your username</label>\r\n         <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n         {...register(\"username\", {\r\n            required: {value: true, message:\"Please provide a username\" },\r\n            maxLength:{value: 30, message:\"that's too long! Please keep it under 30 characters\"}})} \r\n         />\r\n         {errors.username && <p>{errors.username.message}</p>}\r\n         <label htmlFor=\"email\">Your email</label>\r\n         <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            {...register(\"email\", {\r\n            pattern:{value: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\r\n            message:\"Please submit a valid email address\" }})}\r\n         />\r\n         {errors.email && <p>{errors.email.message}</p>}\r\n\r\n         <label htmlFor=\"password\">Password(at least 8 characters, including one special character)</label>\r\n         <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            {...register(\"password\",{\r\n            required: {value:true, message:\"Please provide a password\"},\r\n            maxLength:{value:20, message:\"Your Password is too long! Please pick a password between 8 and 20 characters\"}, \r\n            minLength:{value:8, message:\"Your Password is too short! Please submit at least 8 characters\"}, \r\n            pattern:{value: /(?=.*[!?@#$%^&-+=()])/, message:\"Please include at least one special character(!?@#$%&*()-+=^)\"}\r\n            })}\r\n         />\r\n         {/* <input\r\n            id=\"passwordCheck\"\r\n            type=\"password\"\r\n            {...register(\"passwordCheck\",{\r\n            required: {value:true, message:\"Please rewrite your password\"},\r\n            maxLength:{value:20, message:\"Your Password is too long! Please pick a passwordCheck between 8 and 20 characters\"}, \r\n            minLength:{value:8, message:\"Your Password is too short! Please submit at least 8 characters\"}, \r\n            pattern:{value: /(?=.*[!?@#$%^&-+=()])/, message:\"Please include at least one special character(!?@#$%&*()-+=^)\"}\r\n            })}\r\n\r\n         />\r\n         {errors.passwordCheck && <p>{errors.passwordCheck.message}</p>} */}\r\n\r\n         <button type=\"submit\">Submit</button>\r\n      \r\n      </form>\r\n      <pre> {JSON.stringify(watch(), null, 2)}</pre>\r\n      </div>)\r\n}\r\n\r\nexport default SignUp","import './App.css';\r\nimport {Route, Switch} from 'react-router-dom'; \r\nimport Home from \"./routes/home/Home.js\";\r\nimport Ask from './routes/ask/Ask.js'\r\nimport Guess from './routes/guess/Guess.js';\r\nimport Search from './routes/search/Search.js';\r\nimport About from './routes/about/About.js';\r\nimport User from './routes/user/User.js';\r\nimport Header from './components/Header.js'\r\nimport Nav from './components/Nav.js'\r\nimport SingleAsk from './routes/ask/SingleAsk.js'\r\nimport SingleGuess from './routes/guess/SingleGuess.js'\r\nimport {Grid} from '@material-ui/core'\r\nimport { SingleBedOutlined } from '@material-ui/icons';\r\n\r\nimport SignIn from './routes/user/SignIn';\r\nimport SignUp from './routes/user/SignUp';\r\nimport SecretInfo from './routes/user/SecretInfo';\r\nimport {useContext, Fragment} from 'react';\r\nimport {AuthContext} from './context/AuthContext'\r\nfunction App() {\r\n  const {isAuthenticated} = useContext(AuthContext)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <main>\r\n      <Grid container \r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{width: \"55%\", margin: \"auto\"}}\r\n      >  \r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          \r\n          <Route exact path=\"/ask\">\r\n            <Grid item xs={12}> \r\n              <Nav selected=\"Ask\" notSelected1=\"Guess\" notSelected2=\"Search\"/>\r\n            </Grid>\r\n            <Grid item xs={12} className=\"body\" style={{marginTop: '16px'}}> \r\n              <Ask />\r\n            </Grid>\r\n          </Route>\r\n\r\n          <Route path=\"/ask/:id\">\r\n            <Grid item xs={12}> \r\n                <Nav selected=\"Ask\" notSelected1=\"Guess\" notSelected2=\"Search\"/>\r\n              </Grid>\r\n              <Grid item xs={12} className=\"body\" style={{marginTop: '16px'}}> \r\n                <SingleAsk />\r\n              </Grid>\r\n            </Route>\r\n            \r\n          <Route exact path=\"/guess\">\r\n            <Grid item xs={12}> \r\n              <Nav selected=\"Guess\" notSelected1=\"Ask\" notSelected2=\"Search\"/>\r\n            </Grid>\r\n            <Grid item xs={12} className=\"body\" style={{marginTop: '16px'}}> \r\n              <Guess />\r\n            </Grid>\r\n          </Route>\r\n\r\n          <Route path=\"/guess/:id\">\r\n            <Grid item xs={12}> \r\n              <Nav selected=\"Guess\" notSelected1=\"Ask\" notSelected2=\"Search\"/>\r\n            </Grid>\r\n            <Grid item xs={12} className=\"body\" style={{marginTop: '16px'}}> \r\n              <SingleAsk />\r\n            </Grid>\r\n          </Route>\r\n\r\n          <Route path =\"/search\">\r\n            <Grid item xs={12}> \r\n              <Nav selected=\"Search\" notSelected1=\"Guess\" notSelected2=\"Ask\"/>\r\n            </Grid>\r\n            <Grid item xs={12} className=\"body\" style={{marginTop: '16px'}}> \r\n              <Search />\r\n            </Grid>\r\n          </Route>\r\n\r\n          <Route path=\"/About\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/user\">\r\n            {isAuthenticated?\r\n            (<Fragment> <User /> </Fragment>)\r\n            :\r\n            (<SignIn/>)}\r\n          </Route>\r\n\r\n          <Route path=\"/signup\">\r\n                <SignUp />\r\n          </Route>\r\n        </Switch>\r\n        </Grid>\r\n        </main>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n// A custom theme for this app\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n   type: \"dark\",\r\n    primary: {\r\n      main: '#587291',\r\n    },\r\n    secondary: {\r\n      main: '#D7CEB2',\r\n    },\r\n    error: {\r\n      main: '#FF6978',\r\n    },\r\n    background: {\r\n      default: '#0D0630',\r\n    },\r\n    success: {\r\n      main: '#109648'\r\n    }\r\n  },\r\n  typography: {\r\n     fontFamily: 'Roboto',\r\n  }\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'fontsource-roboto';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from './theme.js'\r\nimport AuthState from './context/AuthContext'; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter> \r\n      <AuthState> \r\n          <ThemeProvider theme={theme}> \r\n            <CssBaseline />\r\n            <App />\r\n          </ThemeProvider>\r\n      </AuthState>\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}